$sizeMap: (
  xxSmall: xxs,
  xSmall: xs,
  small: sm,
  medium: md,
  large: lg,
  xLarge: xl,
  xxLarge: xxl,
  xxxLarge: xxxl,
);

$breakpoint-xs: 320px;
$breakpoint-sm: 480px;
$breakpoint-md: 768px;
$breakpoint-lg: 992px;
$breakpoint-xl: 1200px;

@mixin hover {
  &:hover:not(:disabled, ._disabled, ._selected) {
    filter: brightness(var(--effect-hover));
  }
}

@mixin active {
  &:active:not(:disabled, ._disabled, ._selected) {
    filter: brightness(var(--effect-active));
    transform: scale3d(0.995, 0.995, 1);
  }
}

@mixin disabled {
  &:disabled,
  &._disabled {
    filter: opacity(65%) grayscale(85%);
  }
}

@mixin blur($size: 0.5rem) {
  -webkit-backdrop-filter: blur($size);
  backdrop-filter: blur($size);
}

@mixin fill($position: absolute) {
  position: $position;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin boxShadow($size: md) {
  box-shadow: var(--shadow-#{$size});
}

@mixin dropShadow($size: md) {
  -webkit-filter: drop-shadow(var(--shadow-#{$size}));
  filter: drop-shadow(var(--shadow-#{$size}));
}

%no-select {
  cursor: default;
  -webkit-user-select: none;
  user-select: none;
}

%flex-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

@mixin withTitlebarPadding($numberOfTitlebar: 1) {
  > *:first-child:not(.toolbar) {
    padding-top: calc(var(--layout-spacing-md) + calc($numberOfTitlebar * var(--layout-height-toolbar))) !important;
  }
}

@mixin largeScreen() {
  $width: $breakpoint-lg + 1;

  @media all and (min-width: $width) {
    @content;
  }
}

@mixin belowLargeScreen() {
  @media all and (max-width: $breakpoint-lg) {
    @content;
  }
}

@mixin belowMedium() {
  @media all and (max-width: $breakpoint-md) {
    @content;
  }
}
