@use "./utils";
@use "./layout";

// Accents
$accents: primary, secondary, destructive, success, warning, info, error;

// Sizes
$sizes: xxs, xs, sm, md, lg, xl, xxl, xxxl;

// @mixin hover {
//   &:is(.--clickable, .--hover):not(:disabled, .--disabled, .--selected) {
//     filter: brightness(0.9);
//   }
// }

// @mixin clickable {
//   &:not(:disabled, .--disabled) {
//     @include mixins.hover;
//     cursor: pointer;
//     transition-duration: animation.$duration-sm;
//     transition-property: background-color, color;
//     transition-timing-function: animation.$animation-ease;
//   }
// }

// @mixin selected {
//   &:is(.--selected):not(:disabled, .--disabled) {
//     filter: brightness(0.8);
//   }
// }

// @mixin disabled {
//   &:is(:disabled, .--disabled) {
//     cursor: default;
//     opacity: 55%;
//   }
// }

@mixin blur($size: 0.5rem) {
  backdrop-filter: blur($size);
}

@mixin size($size: layout.$size-md) {
  width: $size;
  height: $size;
}

@mixin fill($position: absolute) {
  position: $position;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin row($justify: flex-start, $align: center) {
  display: flex;
  flex-flow: row nowrap;
  align-items: $align;
  justify-content: $justify;
  white-space: nowrap;
}

// @mixin unSelectable {
//   cursor: default;
//   user-select: none;
// }

@mixin withTitlebarPadding($numberOfTitlebar: 1) {
  > *:first-child:not(.toolbar) {
    padding-top: calc(utils.size() + calc($numberOfTitlebar * $layout-height-header));
  }
}

@mixin rtl($prop, $value, $rtlValue) {
  @if ($direction == ltr) {
    #{$prop}: $value;
  } @else {
    #{$prop}: $rtlValue;
  }
}
